# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input CreateListingInput {
  name: String!
  description: String!
  minimumHours: String
  studioType: String!
  studioHours: String!
  pastClients: String
  amenities: String!
  mainEquipments: String!
  policyRules: String
  latitude: Float!
  longitude: Float!
  pictureUrl: [String!]!
  pricePerHour: Float!
  address: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type ErrorResponse {
  path: String!
  message: String!
}

input FileInfo {
  name: String!
  type: String!
  originalName: String!
}

input ForgotPasswordChangeInput {
  newPassword: String!
  key: String!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Listing {
  id: ID!
  name: String!
  description: String!
  minimumHours: String
  studioType: String!
  studioHours: String!
  pastClients: String
  amenities: String!
  mainEquipments: String!
  policyRules: String
  latitude: Float!
  longitude: Float!
  pictureUrl: [String!]!
  pricePerHour: Float!
  address: String!
  userId: ID!
  creator: User!
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  createListing(createListingInput: CreateListingInput!): Boolean
  userProfileUpdate(profileInput: ProfileInput!): Boolean
  signS3(fileInfo: [FileInfo!]!): [S3Payload!]!
  confirmUser(token: String!): Boolean!
  sendForgotPasswordEmail(
    sendForgotPasswordEmailInput: SendForgotPasswrodEmailInput!
  ): Boolean
  forgotPasswordChange(
    forgotPasswordChangeInput: ForgotPasswordChangeInput!
  ): [ErrorResponse!]
  login(loginInput: LoginInput!): [ErrorResponse!]
  logoutUser: Boolean
  register(registerInput: RegisterInput!): [ErrorResponse!]
}

input ProfileInput {
  biography: String!
  avatar: String!
  socialMedia: JSON!
}

type Query {
  searchListings(zoomLevel: Float!, lng: Float!, lat: Float!): [Listing!]!
  showListing(id: String!): Listing
  userListings(id: String!): [UserListings!]!
  me: User
}

input RegisterInput {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
}

type S3Payload {
  signedUrl: String!
  fileType: String!
  originalName: String!
}

input SendForgotPasswrodEmailInput {
  email: String!
}

type User {
  id: ID!
  firstName: String!
  lastName: String
  email: String!
  socialMedia: JSON
  biography: String
  avatar: String
  createdAt: DateTime!
}

type UserListings {
  firstName: String!
  lastName: String
  socialMedia: JSON
  biography: String
  avatar: String
  createdAt: DateTime!
  listings: [Listing!]
}
